spring-boot-demo:
  # 是否启用ansi控制台输出有颜色的字体，local环境建议开启，服务器环境设置为false
  enable-ansi: false

  # AOP配置
  aop:
    log:
      # 是否启用
      enabled: true
      # 1.请求和响应分开，按照执行顺序打印
      # 2.ThreadLocal线程绑定，方法执行结束时，连续打印请求和响应日志
      # 3.ThreadLocal线程绑定，方法执行结束时，同时打印请求和响应日志
      print-type: 1
      # 请求日志在控制台是否格式化输出，local环境建议开启，服务器环境设置为false
      request-log-format: false
      # 响应日志在控制台是否格式化输出，local环境建议开启，服务器环境设置为false
      response-log-format: false



#新增静态资源配置
  # 拦截器配置
  interceptor-config:
    resource-config:
      include-path: ${spring-boot-demo.resource-access-patterns}


  # 文件上传下载配置
  upload-path: C:\\Java\\workSpace\\huayucj\\target\\classes\\upload\\
  # 资源访问路径
  resource-access-path: /resource/
  # 资源访问路径匹配：/resource/**
  resource-access-patterns: ${spring-boot-demo.resource-access-path}**
  # 资源访问全路径前缀：http://localhost:8888/resource/
  resource-access-url: http://localhost:${server.port}${server.servlet.context-path}${spring-boot-demo.resource-access-path}




server:
  port: 8090
  servlet:
    context-path: /
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/chanjiao?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password: q1w2
#    password: Q1w2e3

  # Redis配置
  redis:
    database: 0
    host: localhost
    password:
    port: 6379

